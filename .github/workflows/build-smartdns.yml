name: SmartDns

on:
  #release:
    #types: published
#  push:
#    branches:
#      - master
#    paths:
#      - 'k2p.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/pymumu/smartdns/
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH smartdns

#    - name: Load custom configuration
#      run: |
#        [ -e files ] && mv files smartdns/files
#        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE smartdns/.config
#        chmod +x $DIY_SH
#        cd smartdns
#        ../$DIY_SH


    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'
      
    - name: Compile the firmware
      id: compile
      run: |
        cd smartdns
        mkdir target
        chmod +x package/build-pkg.sh
        package/build-pkg.sh '$0 --platform luci-compat --arch mips_24kc --outputdir $PWD/target'
        package/build-pkg.sh '$0 --platform openwrt --arch mips_24kc --outputdir $PWD/target'
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: SmartDns_bin
        path: smartdns/target

#    - name: Upload firmware directory
#      uses: actions/upload-artifact@master
#      if: steps.organize.outputs.status == 'success' && !cancelled()
#      with:
#        name: SmartDns_firmware
#        path: ${{ env.FIRMWARE }}
